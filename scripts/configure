#!/usr/bin/env bash

SCRIPTS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" 
 # Get root directory of project
PROJECT_DIR=$(dirname $SCRIPTS_DIR)            

cd $PROJECT_DIR
# cmake -H. -Bbuild

# ############################################ 1. openssl #################################
# echo
# echo "---- 1) Openssl"
# echo
# echo "-- a) Download openssl"
# wget https://www.openssl.org/source/old/1.0.2/openssl-1.0.2o.tar.gz
# echo
# echo "-- b) Unzip openssl"
# tar -xzf openssl-1.0.2o.tar.gz
# echo
# echo "-- c) Config openssl"
# cd openssl-1.0.2o
# ./config shared
# echo
# echo "-- d) build openssl"
# make
# mkdir lib
# cp libssl* libcrypto* lib/
# echo
# echo "-- ll lib"
# ls -l lib
# echo
# echo "-- pwd openssl"
# pwd

# #################################### 2. robo-shell req #########################################

echo
echo "---- 2) robo-shell req"
cd $PROJECT_DIR
echo
echo "-- dl scons"                  
wget https://ftp.osuosl.org/pub/blfs/conglomeration/scons/scons-2.5.1.tar.gz
echo
echo "-- pwd"                  
pwd
echo "-- ls -l"                  
ls -l

echo
echo "-- unzip scons"
tar -xzf scons*

echo
echo "-- install scons"                  
sudo python scons-2.5.1/setup.py install > sclogs

echo
echo "-- scons -v"                  
scons -v    

echo
echo "-- a) git clone Qt_for_CI... "
git clone https://github.com/simsekgokhan/Qt_for_CI.git
echo
echo "-- mv Qt_for_CI/* ."
mv Qt_for_CI/*.gz .

echo 
echo "mkdir -p Qt5.9.3/5.9.3/"
mkdir -p Qt5.9.3/5.9.3/

echo
echo "-- tar -xzf qt_5.9.3_gcc_64.tar.gz -C Qt5.9.3/5.9.3/"
tar -xzf qt_5.9.3_gcc_64.tar.gz -C Qt5.9.3/5.9.3/

// ...

echo
echo "-- tar -xzf openssl-1.0.2o_built_linux.tar.gz"
tar -xzf openssl-1.0.2o_built_linux.tar.gz

echo
echo "sudo apt-get update"
sudo apt-get update

echo
echo "sudo apt-get install libgl-dev"
sudo apt-get install libgl-dev

# ###########################  3. robo-shell ##################################################

echo
echo "---- 3) robo-shell"
cd $PROJECT_DIR
echo
echo "-- pwd"
pwd
echo
echo "-- a) git clone robo-shell... "
git clone https://github.com/paralect/robomongo-shell.git

echo
echo "-- cd robomongo-shell"
cd robomongo-shell
echo "-- pwd"
pwd

export ROBOMONGO_CMAKE_PREFIX_PATH="$PROJECT_DIR/Qt5.9.3/5.9.3/gcc_64/;$PROJECT_DIR/robomongo-shell;$PROJECT_DIR/openssl-1.0.2o"
echo
echo "-- ROBOMONGO_CMAKE_PREFIX_PATH:"
echo $ROBOMONGO_CMAKE_PREFIX_PATH                           

# ------- a) Use pre-built robo-shell
echo 
echo "mkdir build"
mkdir build

echo
echo "-- tar -xzf $PROJECT_DIR/opt.tar.gz -C build"
tar -xzf $PROJECT_DIR/opt.tar.gz -C build

# ------- b) Build robo-shell
# echo
# echo "-- pip install"
# pip install --user -r etc/pip/dev-requirements.txt

# echo
# echo "-- chmod +x bin/*"
# chmod +x bin/*

# echo
# echo "-- bin/build"
# bin/build 

###########################  4. robo ##################################################
# https://github.com/simsekgokhan/Qt_for_CI

echo
echo "---- 4) robo"
cd $PROJECT_DIR  

echo
echo "-- git clone robo ... "
git clone https://github.com/Studio3T/robomongo

echo
echo "-- cd robomongo"
cd robomongo

echo 
echo "-- bin/configure"
bin/configure 

echo 
echo "-- bin/build"
bin/build 

################################ END #############################################

# --------------------------- END ------------------------
echo
# echo "-- ll aft"
# pwd
# ls -l

echo
echo "----- DONE ----"



